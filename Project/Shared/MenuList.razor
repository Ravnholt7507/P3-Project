@inherits AdminFunctionality

<div>
    <h4>Create Category</h4>
    <label>
        <input @bind="newCategory" placeholder="Indtast kategori" />
    </label>

    <button @onclick="UpdateList">
        Update kategorier
    </button>
</div>
<br />
<br />
<div>
    <h4>Create Subcategory</h4>
    <label for="Category">Choose which category to create subcategory for:</label>
    <select name="Category" id="Category" @bind="selectedCategory">
        @foreach (Category category in Categories)
        {
            <option value=@category.CategoryName>@category.CategoryName</option>
        }
    </select>
    <br />
    <label>
        <input @bind="newTitle" placeholder="Indtast Titel" />
    </label>

    <button @onclick="Insert">
        Update Titler
    </button>

    <br />

    @*<label>
            <input @bind="addItem" placeholder="Tilføj et produkt" />
        </label>

        <button @onclick="updateItem">
            Opdater titler
        </button>*@


    @*<label>
            <input @bind="CategoryToRemove" placeholder="Fjern Kategori eller item" />
        </label>

        <button @onclick="Remove">
            opdater titler eller kategorier
        </button>*@

    <br />
    <br />
</div>

<div>
    <input type="text" @bind="NewItemName" />


    <br />
    <br />

</div>

<div>
    <h4>Remove a Category or Item</h4>
    <label>
        <input list="Categories" @bind="CategoryToRemove" placeholder="Fjern Kategori eller item" />
    </label>

    <button @onclick="Remove">
        Fjern
    </button>

    <datalist id="Categories">
        @foreach (Category category in Categories)
        {
            <option value=@category.CategoryName></option>
            foreach (Subcategory subcategory in category.Subcategory)
            {
                <option value=@subcategory.SubcategoryName></option>
            }
        }
    </datalist>
</div>



@*@for (int i = 0; i < Categories.Count; i++)
    {
        <button class="w3-bar-Subcategory w3-button" @onclick="Dropdownbtn"><i class="fa fa-bars"></i><a>@Categories[i].CategoryName</a></button>
        <div class="dropdown-content2">
            @for (int k = 0; k < Categories[i].Subcategory.Count; k++)
            {
                <button class="w3-bar-Subcategory w3-button">@Categories[i].Subcategory[k].SubcategoryName</button>
            }

        </div>


    }*@

@for (int i = 0; i < Categories.Count; i++)
{
    if (selectedCategory == Categories[i].CategoryName) {
    <button class="w3-bar-Subcategory w3-button" @onclick="Dropdownbtn"><i class="fa fa-bars"></i><a>@Categories[i].CategoryName</a></button>
    <div class="dropdown-content2">
        @for (int k = 0; k < Categories[i].Subcategory.Count; k++)
        {
            <button class="w3-bar-Subcategory w3-button">@Categories[i].Subcategory[k].SubcategoryName</button>
        }

    </div>
    }

}

<style>
    .dropdown-content2 {
        display: none;
        display: @Visible;
    }
    .dropdown-content2 a{
        margin-left: 10px;
    }

</style>

@*
    Code for categories
*@
@code {
    public string newTitle = null;
    public string newCategory = null;
    public string CategoryToRemove = null;
    public string NewItemName = null;


    public void Remove()
    {
        foreach (Category category in Categories)
        {
            if ((category.CategoryName == CategoryToRemove))
            {
                Categories.Remove(category);
                CategoryToRemove = null;
                break;
            }
        }

        foreach (Category Category in Categories)
        {
            foreach (var item in Category.Subcategory)
            {
                if (item.SubcategoryName == CategoryToRemove)
                {
                    Category.Subcategory.Remove(item);
                    CategoryToRemove = null;
                    break;
                }
            }
        }
    }

    public class Category
    {
        public string CategoryName;
        public Category(string Name)
        {
            CategoryName = Name;
        }
        public List<Subcategory> Subcategory = new List<Subcategory>();
    }

    public class Subcategory
    {
        public string SubcategoryName;
        public Subcategory(string Name)
        {
            SubcategoryName = Name;
        }
    }

    public List<Category> Categories = new List<Category>();
    private string selectedCategory = null;

    public void UpdateList()
    {
        selectedCategory = newCategory;
        Categories.Add(new Category(newCategory));
        newCategory = null;
    }

    public void Insert()
    {
        foreach (Category category in Categories)
        {
            if (category.CategoryName == selectedCategory)
            {
                category.Subcategory.Add(new Subcategory(newTitle));
                newTitle = null;
            }
        }
    }

    private string Visible;
    private int i = 1;

    private void Dropdownbtn()
    {
        i++;
        if (i % 2 == 0)
        {
            Visible = "block";
        }
        else
        {
            Visible = "none";
        }
    }


}

@*
    Code for itemlist

    color array:
        0 = black
        1 = white
        2 = blue
        3 = green
        4 = red
        5 = yellow
        6 = purple
        7 = brown
        8 = grey
        9 = pink
        10 = orange

    sizes array:
        0 = xxs
        1 = xs
        2 = s
        3 = m
        4 = l
        5 = xl
        6 = xxl
*@