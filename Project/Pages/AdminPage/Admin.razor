@page "/Admin"
@inherits AdminCode
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavManager

@if (isLoaded)
{
    <div class="page">
        <h1>Admin page</h1>
        <div class="container">
            <div>
                <h4>Tilføj en kategori</h4>
                <form @onsubmit="UpdateList">
                    <input @bind="newCategory" placeholder="Indtast kategori" required />
                    <input class="butt add" type="submit" value="Tilføj" />
                </form>
            </div>
            <div>
                <h4>Tilføj en underkategori</h4>
                <form @onsubmit="Insert">
                    <input @bind="newTitle" placeholder="Indtast subkategori" required />
                    <input class="butt add" type="submit" value="Tilføj" />
                </form>
            </div>
            <div>
                <h4>Fjern en kategori eller artikel</h4>
                <form @onsubmit="Remove">
                    <input list="Categories" @bind="CategoryToRemove" placeholder="Fjern Kategori eller item" required />
                    <input class="butt add" type="submit" value="Fjern" />
                </form>
                <datalist id="Categories">
                    @foreach (Category category in Categories)
                    {
                        <option value=@category.CategoryName></option>
                        foreach (Subcategory subcategory in category.Subcategory)
                        {
                            <option value=@subcategory.SubcategoryName></option>
                        }
                    }
                </datalist>
            </div>
            @*<div>
                <h4>Fjern en type</h4>
                <form @onsubmit="Remove">
                    <input list="Categories" @bind="CategoryToRemove" placeholder="Fjern Kategori eller item" required />
                    <input class="butt add" type="submit" value="Fjern" />
                </form>
                <datalist id="Categories">
                    @foreach (Subcategory subcategory in category.Subcategory)
                        {
                            <option value=@subcategory.SubcategoryName></option>
                        }
                    
                </datalist>
            </div>*@
        </div>

        <div class="container2">
            <label for="Category">Vælg en kategori for at tilføje en underkategori:</label>
            <select name="Category" id="Category" @bind="selectedCategory">
                <option value="none" selected disabled hidden>Vælg en kategori</option>
                @foreach (Category category in Categories)
                {
                    <option value=@category.CategoryName>@category.CategoryName</option>
                }
            </select>

            @for (int i = 0; i < Categories.Count-1; i++)
            {
                if (selectedCategory == Categories[i].CategoryName)
                {
                    <button class="w3-bar-Subcategory w3-button" @onclick="Dropdownbtn"><i class="fa fa-bars"></i><a>@Categories[i].CategoryName</a></button>
                    <div class="dropdown-content2">
                        @for (int k = 0; k < Categories[i].Subcategory.Count-1; k++)
                        {
                            <button class="w3-bar-Subcategory w3-button" @onclick="() => { RemoveTypeFromCategory(Categories[i].CategoryName, Categories[i].Subcategory[k].SubcategoryName); }">@Categories[i].Subcategory[k].SubcategoryName</button>
                        }
                    </div>
                }
            }
        </div>
    </div>
}
else
{
    <p>Sorry, but Andreas made spaghtti code.</p>
}



@code
{
    public string AccessToken = null;

    bool isLoaded;

    public async Task Read()
    {
        var AccessTokenSession = await SessionStorage.GetAsync<string>("UserName");
        AccessToken = AccessTokenSession.Value;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Read();
        if (DataBaseVerify(AccessToken))
        {
            isLoaded = true;
        }
        StateHasChanged();
    }
}

<style>

    .page {
        height: fit-content;
        overflow: auto;
        margin-bottom: 30px;
    }

    .dropdown-content2 {
        display: none;
        display: @Visible;
    }

    .dropdown-content2 a{
        margin-left: 10px;
    }

    .container {
        padding: 10px;
        border: 1px solid black;
        border-radius: 3px;
        width: 540px;
        height: 246px;
        background-color: #efefef;
        position: relative;
        margin-left: 20px;
    }

    .container2 {
        padding: 10px;
        border: 1px solid black;
        border-radius: 3px;
        width: 540px;
        height: 246px;
        background-color: #efefef;
        position: relative;
        top: 30px;
        margin-left: 20px;
    }

    .add {
        width: fit-content;
        background-color: gray;
        height: 27px;
        font-size: small;
        padding-left: 10px;
        padding-right: 10px;
        
    }

</style>
