@page "/Admin2"
@using CSharpFiles;
@using System.IO;
@inherits AdminCode

<h2>Tilføj items</h2>

<div>
    <label>
        <input @bind="NewItem" placeholder="Indtast artikel" />
    </label>

    @*<button @onclick="AddNewItem">
            Tilføj artikel
        </button>*@

    <button @onclick="InitSubcats">
        init subcats
    </button>
</div>

<h2> Attributer til artiklen </h2>



<div class="row">
    <div class="col-md-3">
        <button class="=btn btn-primary" @onclick="LoadImages">Load Images </button>
        <hr />
        <h2>File List</h2>
        <hr />
        @if (filesList != null && filesList.Count > 0)
        {
            int nSL = 0;
            @foreach (string file in filesList)
            {
                nSL++;
                <br />
                <span>@nSL.</span>
                <span @onclick="@(e=>ReadFile(file))" style="cursor:pointer;text-decoration:underline;color:blue;"> @file </span>
            }
        }
    </div>
    <div class="col-md-9">
        <h1>Image Name : @imgName</h1>
        <div>
            <img src="@img" asp-append-version="true" style="width:200px;height:200px;" />
        </div>
    </div>
</div>

<div>
    <textarea @bind="Description"> description </textarea>


    <label>
        Kategorier
        <br />
        <select @bind="SelectedCat" class="form-select">
            @foreach (Category cat in cats)
            {
                <optgroup label="@cat.CategoryName"> @cat.CategoryName </optgroup>
                foreach (Subcategory subcat in cat.Subcategory)
                {
                    <option value="@subcat.SubcategoryName"> @subcat.SubcategoryName </option>
                }
            }
        </select>
    </label>
</div>

@foreach (string Colour in Colours)
{
    <div class="form-check">
        <input type="checkbox" disabled="@(placeholderColour != null)" @onchange="e => { CheckboxColours(Colour, e.Value); }" />
        <label class="form-check-label" for="flexCheckDefault">
            @Colour
        </label>
    </div>
}

<br />
@if (placeholderColour != null)
{
    @foreach (string Size in Sizes)
    {
        <div class="form-check">
            <input type="checkbox" @onchange="e => { CheckboxSizes(Size, e.Value); }" />
            <label class="form-check-label" for="flexCheckDefault">
                @Size
            </label>
        </div>
    }
    <button @onclick="@Verify">
        Tilføj kombi
    </button>
}

<div>
    <h5>Stock</h5>
    <label>
        <input @bind="Stock" placeholder="Indtast kategori" />
    </label>
    <h5>Price</h5>
    <label>
        <input @bind="Price" placeholder="Indtast kategori" />
    </label>
</div>

<div>
    @chosenColors[0]
</div>


@code {
    public List<string> SelectedColours = new List<string>();
    public List<SizeAndStock> SelectedSizes = new List<SizeAndStock>();
    public List<string> PlaceholderSizes = new List<string>();


    public bool[] chosenColors = { false, false, false, false };
    public bool[] chosenSizes= { false, false, false};

    string img = "";
    string imgName = "N/A";
    List<string> filesList = new List<string>();
    string path = $"{Directory.GetCurrentDirectory()}{@"\wwwroot\Images"}";
    public void LoadImages()
    {
        var files = Directory.GetFiles(path);
        foreach (var file in files)
        {
            filesList.Add(Path.GetFileName(file));
        }
    }

    public void ReadFile(string fileName)
    {
        imgName = fileName.Split('.')[0];
        img = "/Images/" + fileName;
    }

    public string SelectedValue;
    public string Description;
    public int Stock;
    public double Price;

    protected bool IsDisabled { get; set; } = false;

    public string placeholderColour;
    public string SelectedColour;

    public string[] Colours = { "red", "blue", "yellow", "green" };
    public string[] Sizes = { "big", "medium", "small" };

    public string SelectedCat = null;
    public string NewItem = null;

    public List<Category> cats = new List<Category>() { new Category("Mens Clothing"), new Category("Womens clothing") };

    public void Verify()
    {
        color NewColor = new color(SelectedColour);
        NewColor.SnS = SelectedSizes.ToArray();
        placeholderColour = null;
        Console.WriteLine($"{NewColor.SnS[0].Size} {NewColor.SnS[1].Size} ");
    }


    public void InitSubcats()
    {
        cats[0].Subcategory.Add(new Subcategory("Trøje"));
        cats[0].Subcategory.Add(new Subcategory("Bukser"));
        cats[1].Subcategory.Add(new Subcategory("Jakke"));
        cats[1].Subcategory.Add(new Subcategory("Sko"));
    }

    public void CheckboxSizes(string size, object checkvalue)
    {
        Console.WriteLine(checkvalue);
        if ((bool)checkvalue)
            SelectedSizes.Add(new SizeAndStock(size));
        if (!(bool)checkvalue)
            SelectedSizes.Remove(new SizeAndStock(size));
    }

    public void CheckboxColours(string colour, object checkvalue)
    {
        if ((bool)checkvalue)
        {
            placeholderColour = colour;
            SelectedColour = colour;
        }
        switch (colour)
        {
            case "red": chosenColors[0] = !chosenColors[0]; break;
            case "blue": chosenColors[1] = !chosenColors[1]; break;
            case "yellow": chosenColors[2] = !chosenColors[2]; break;
            case "green": chosenColors[3] = !chosenColors[3]; break;
            default: break;
        }
    }

    public class SizeAndStock
    {
        public SizeAndStock(string InputSize)
        {
            Size = InputSize;
        }
        public int id;
        public string Size;
        public bool state = false;
        public int stock;
    }

    public class color
    {
        public color(string name)
        {
            ColorName = name;
        }
        public string ImageLink;
        public string ColorName;
        public string id;
        public SizeAndStock[] SnS;
    }

    public class product
    {
        public color[] Color;
        public int Id = 0;
    }

    public void test()
    {
        product nederdel = new product();

    }

    /*public void AddNewItem()
    {
        Product prod = new Product(1);
        prod.Description = Description;
        prod.Type = SelectedCat;
        prod.Price = Price;
        prod.Name = NewItem;
        prod.ImageLink = img;
        prod.Color.Size =
        SelectedSizes.Clear();
        Console.WriteLine($"{prod.Name} {prod.Description} {prod.Type} {prod.Colour} {prod.Stock} {prod.Price} {prod.Size}");
    }*/
}

    @*prod.Colour = SelectedColour;
    prod.Stock = Stock;
    prod.Size = SelectedSizes[0];*@
