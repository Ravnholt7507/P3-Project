@page "/Products"

<h3>Search Products</h3>

<br />

<SearchBarComponent OnSearch="HandleSearch"> </SearchBarComponent>

<br />

<table class="table">
    <thread>
        <tr>
            <th>
                Name
            </th>
            <th>
                Brand
            </th>
            <th>
                Price
            </th>
        </tr>
    </thread>
    <tbody>
        @if (Products != null && Products.Any())
        {
            @foreach (var Product in Products)
            {
                @if (Product != null)
                {
        <tr>
            <td>
                <NavLink href="@($"product/{Product.ID}")">
                    @Product.Name
                </NavLink>
            </td>
            <td>@Product.Brand</td>
            <td>@Product.Price.ToString("kr.")</td>
        </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="3">
                    cannot find products
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    
    public void Loop()
    {
        for (int i = 1; i < 11; i++)
        {
            Product product = new Product();
            Products.Add(product);
        }
    }

    protected override Task OnInitializedAsync()
    {
        Loop();
        return base.OnInitializedAsync();
    }
    
    public List<Product> Products = new List<Product>()
    {
    };

    public class Product
    {
        public int ID { get; set; }
        public string Brand { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
        public string ImageLink { get; set; }
        public string Description { get; set; }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Products = GetProducts();
    }

    public void HandleSearch(string filter)
    {
        Products = GetProducts(filter);
    }


    public List<Product> GetProducts(string filter = null)
    {
        if (string.IsNullOrWhiteSpace(filter)) return Products;
        return Products;
    }
}