@page "/Cart"
@inherits ItemList
@using CSharpFiles
@inject ProtectedLocalStorage BrowserStorage

<input class="form-control" @bind="ItemsInCart" />
<button class="btn btn-secondary" @onclick="Read">Read</button>
<button class="btn btn-secondary" @onclick="Delete">Delete</button>

<h1>Din indkoebskurv</h1>

@code {
    public string ItemsInCart;

    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("CartItems");
        Console.WriteLine(result.Value);
        ItemsInCart = result.Success ? result.Value : "";
    }

    public async Task Delete()
    {
        await BrowserStorage.DeleteAsync("CartItems");
    }

    protected override Task OnInitializedAsync()
    {
        Read();
        return base.OnInitializedAsync();
    }
}

<div class="page">
    <div class="cart-overview">
        @foreach (var item in Order)
        {
            <div class="item-container">
                <h4>@item.Name x @item.OrderAmount <p class="right">@item.SubTotal,-</p></h4>
                <button @onclick="() => { item.OrderAmount += ErrorPos(item.OrderAmount, item.Stock); item.CalcPrice(); CalcTotal(); }" class="butt"><b>+</b></button>
                <button @onclick="() => { item.OrderAmount -= ErrorNeg(item.OrderAmount, item.Stock); item.CalcPrice(); CalcTotal(); }" class="butt"><b>-</b></button>
                <button @onclick="() => { Order.Remove(item); CalcTotal(); RemoveError(); }" class="butt right"><b>x</b></button>
            </div>
        }
        <div class="order-total">
            <p>Ordre Total:<b class="right"> @Total,-</b></p>
            <b class="Supply_Demand error">Not enough in stock :(</b>
            <b class="Negative_Order error">If you want to remove press X instead</b>
            <a class="butt" href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Checkout</a>
        </div>
    </div>
</div>

<style>
    .page {
        height: fit-content;
        margin-bottom: 30px;
    }

    .cart-overview {
        outline: solid;
        outline-color: black;
        width: 500px;
        background-color: #efefef;
    }

    .item-container {
        border-bottom: 1px solid;
        padding: 2px;
    }

    .order-total {
        background-color: #bababa;
        height: 100%;
    }

    .order-total p{
        font-size: 30px;
    }

    .right {
        float: right;
    }

    .cart-overview b {
        font-size: large;
    }

    .error {
        background-color: lightcoral;
    }

    .Supply_Demand {
        display: @SupplyDemand;
    }

    .Negative_Order {
        display: @NegativeOrder;
    }
</style>