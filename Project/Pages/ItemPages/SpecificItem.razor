@page "/Product/{ItemSpecification}"
@using Project.CSharpFiles
@inject ProtectedLocalStorage BrowserStorage
@inherits SpecificItemCode


<h2>Product details</h2>

<div class="w3" style="width: 28rem;">
    <div class="card-body">
        <img src="@Prod.ImageLink" />
        <h5 class="card-title">@Prod.Name</h5>
        <h6 class="card-subtitle mb-2 text-muted">@Prod.Name</h6>
        <hr />
        <p>Vælg en farve:</p>
        <select>
            @foreach (string item in Prod.ColourList)
            {
                <option value="@item">@item</option>
            }
        </select>

        <p>Vælg en størrelse:</p>
        <select>
            @foreach (string item in Prod.SizeList)
            {
                <option value="@item">@item</option>
            }
        </select>

        <p>
            Pris:  <label style="color:darkred">@Prod.Price.ToString("Kr.")</label>
        </p>
        <p class="card-text">@Prod.Description</p>
    </div>
</div>
<NavLink href="/products"> Back To Products</NavLink>
<button class="btn btn-primary" @onclick="() => { AddItem(); Save();}">Tilføj til kurv</button>

@code {

    public string CartItem;

    public void AddItem()
    {
        CartItem += " & " + Prod.Id + " " + Prod.Colour_id + " " + Prod.Size;
    }

    public async Task Read()
    {
        var result = await BrowserStorage.GetAsync<string>("CartItems");
        CartItem = result.Success ? result.Value : "";
    }

    public async Task Save()
    {
        await BrowserStorage.SetAsync("CartItems", CartItem);
    }

    protected override Task OnInitializedAsync()
    {
        Read();
        return base.OnInitializedAsync();
    }
}


