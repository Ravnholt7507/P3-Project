@page "/Products/{Searched}"
@using Project.CSharpFiles

<h3>Search Products</h3>

<br />

<SearchBarComponent OnSearch="HandleSearch"> </SearchBarComponent>

<br />

@if (Products != null && Products.Count() > 0)
{
    <div class="row">
        @foreach (var product in Products)
        {
            <ProductCard Product="product"></ProductCard>}
    </div>
}
else
{
    <p> No Products Found :(</p>
}

@code {

    [Parameter]
    public string Searched { get; set; }

    public void Loop()
    {
        Product productCall = new Product();
        string[][] productArray = productCall.Call("Multiple products");
        for (int i = 0; i < productArray.Length; i++)
        {
            Product newproduct = new Product
            {
                Id = int.Parse(productArray[i][0]),
                Name = productArray[i][1],
                Price = double.Parse(productArray[i][2]),
                Colour_id = int.Parse(productArray[i][3]),
                ImageLink = productArray[i][4],
                Size = productArray[i][5]
            };
            Products.Add(newproduct);
        }
    }

    protected override Task OnInitializedAsync()
    {
        Loop();
        return base.OnInitializedAsync();
    }

    public List<Product> Products = new List<Product>() { };


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Products = GetProducts(Searched);
    }

    public void HandleSearch(string filter)
    {
        Products = GetProducts(filter);
    }


    public List<Product> GetProducts(string filter = null)
    {
        if (string.IsNullOrWhiteSpace(filter))
        {
            return Products;
        }
        List<Product> ProductID = new List<Product>();

        DbCall dbcall = new DbCall();
        ProductID = dbcall.SearchCall(filter);

        List<Product> searchedProducts = new List<Product>();

        foreach (var prod in ProductID)
        {
            searchedProducts.Add(dbcall.GetProdByID(prod.Id));
        }

        //Console.WriteLine(itemArray[0][0]);

        //for (int i = 0; i < itemArray.Length; i++)
        //{
        //    newProducts.Add(Product.CreateInstance(itemArray[i]));
        //}
        return searchedProducts;
    }

    [Parameter]
    public Product CartItem { get; set; }
}



@*<table class="table">
        <thread>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Brand
                </th>
                <th>
                    Price
                </th>
            </tr>
        </thread>
        <tbody>
            @if (Products != null && Products.Count() > 0)
            {
                @foreach (var product in Products)
                {
                    @if (product != null)
                    {
                        <tr>
                            <td>
                                <NavLink href="@($"Product/{product.Id +"&"+product.Colour_id +"&"+ product.Size}")">
                                    @product.Name
                                </NavLink>
                            </td>
                            <td>@product.Name</td>
                            <td>@product.Price.ToString("kr.")</td>
                        </tr>
                    }
                }
            }
            else
            {
                <tr>
                    <td colspan="3">
                        cannot find products
                    </td>
                </tr>
            }
        </tbody>
    </table>*@