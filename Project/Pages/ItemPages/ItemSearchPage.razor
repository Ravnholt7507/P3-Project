@page "/Products/{Searched}"
@page "/Products"

@using System.Collections.Generic
@using Project.CSharpFiles

<h3>Search Products</h3>


@if (Products != null && Products.Count() > 0)
{
    <div class="row">
        @foreach (var product in Products)
        {
            <ProductCard Product="product"></ProductCard>}
    </div>
}
else
{
    <p> No Products Found :(</p>
}

@code {

    [Parameter]
    public string Searched { get; set; }
    public string ImageToShow;


    public void Loop()
    {
        Product productCall = new Product();
        string[][] productArray = productCall.Call("Multiple products");
        for (int i = 0; i < productArray.Length; i++)
        {
            Product newproduct = new Product
            {
                Id = int.Parse(productArray[i][0]),
                Name = productArray[i][1],
                Price = double.Parse(productArray[i][2]),
                Colour_id = int.Parse(productArray[i][3]),
                ImageLink = productArray[i][4].Split("&")[0],
                Size = productArray[i][5]
            };
            Products.Add(newproduct);
        }
    }

    protected override Task OnInitializedAsync()
    {
        Loop();
        return base.OnInitializedAsync();
    }

    public List<Product> Products = new List<Product>() { };


    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Products = GetProducts(Searched);
    }


    public List<Product> GetProducts(string filter = null)
    {
        if (string.IsNullOrWhiteSpace(filter))
        {
            return Products;
        }
        List<Product> ProductID = new List<Product>();

        DbCall dbcall = new DbCall();
        ProductID = dbcall.SearchCall(filter);

        List<Product> searchedProducts = new List<Product>();

        foreach (var prod in ProductID)
        {
            Product NewProduct = dbcall.GetProdByID(prod.Id);
            NewProduct.ImageLink = NewProduct.ImageLink.Split("&")[0];
            searchedProducts.Add(NewProduct);
        }

        return searchedProducts;
    }

    [Parameter]
    public Product CartItem { get; set; }
}